@using Thinktecture.IdentityServer.Web.Areas.Admin.App_LocalResources.User
@model UsersViewModel

@{
    ViewBag.Title = Index_cshtml.Users;
}
<fieldset class="editor">
    <legend>@ViewBag.Title (Total: @Model.Total)</legend>
    <div class="nestedForm">
        @using (Html.BeginForm("Index", "User", null, FormMethod.Get, null))
        {
            <label>Filter</label>
            <input type="text" name="filter" value="@Model.Filter" autofocus />
            <button>Go</button>
        }
    </div>
    <div>
        @if(Model.CurrentPage > 1)
        {
            @Html.ActionLink("Prev", "Index", new{page=Model.CurrentPage-1, filter=Model.Filter})
        }
        Page @Model.CurrentPage of @Model.TotalPages
        @if(Model.CurrentPage < Model.TotalPages)
        {
            @Html.ActionLink("Next", "Index", new{page=Model.CurrentPage+1, filter=Model.Filter})
        }
    </div>
    @using (Html.BeginForm("Index", "User", new { filter=@Model.Filter }, FormMethod.Post))
    {
        <input type="hidden" name="page" value="@Model.CurrentPage" />
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(Index_cshtml.ErrorDeletingUsers)

        var users = Model.Users;
        for (var i =0; i < users.Count(); i++) {
            <div>
                @Html.HiddenFor(x => users[i].Username)
                @Html.LabelFor(x => users[i].IsSelectedForAction, users[i].Username)
                @Html.CheckBoxFor(x => users[i].IsSelectedForAction)
                @Html.HiddenFor(x => users[i].IsLockedOut)
                @if (users[i].IsLockedOut)
                {
                    <img src="~/content/images/lock.png" style="width: 0.9em;" alt="locked out"/>
                }
                @Html.ActionLink(Index_cshtml.Roles, "Roles", new { username = users[i].Username })
                @Html.ActionLink(Index_cshtml.Password, "ChangePassword", new { username = users[i].Username })
                @if (Model.IsProfileEnabled)
                {
                    @Html.ActionLink(Index_cshtml.Profile, "Profile", new { username = users[i].Username })
                }
                @if (Model.IsOAuthRefreshTokenEnabled)
                {
                    @Html.ActionLink("tokens", "Index", "OAuthRefreshToken", new { username = users[i].Username }, null)
                }
            </div>
        }
        <div class="buttons">
            <button type="submit" name="action" value="unlock">@Index_cshtml.Unlock</button>
            <button type="submit" name="action" value="delete">@Index_cshtml.DeleteSelected</button>
            <button type="submit" name="action" value="new">@Index_cshtml.New</button>
            <button type="reset">@Index_cshtml.Cancel</button>
        </div>
    }
</fieldset>